// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPITest.Data;

#nullable disable

namespace WebAPITest.Migrations
{
    [DbContext(typeof(WebAPITestContext))]
    partial class WebAPITestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPITest.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Food"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Tech"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "News"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Tacos"
                        });
                });

            modelBuilder.Entity("WebAPITest.Models.Content", b =>
                {
                    b.Property<int>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContentId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Visibility")
                        .HasColumnType("int");

                    b.HasKey("ContentId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Content");

                    b.HasData(
                        new
                        {
                            ContentId = 1,
                            Author = "Author",
                            Body = "Title",
                            CategoryId = 3,
                            CreatedAt = new DateTime(2025, 2, 2, 21, 9, 11, 193, DateTimeKind.Local).AddTicks(1846),
                            LastModifiedAt = new DateTime(2025, 2, 2, 21, 9, 11, 193, DateTimeKind.Local).AddTicks(1888),
                            Title = "Title",
                            Visibility = 0
                        });
                });

            modelBuilder.Entity("WebAPITest.Models.Content", b =>
                {
                    b.HasOne("WebAPITest.Models.Category", "Category")
                        .WithMany("PostedContent")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebAPITest.Models.Category", b =>
                {
                    b.Navigation("PostedContent");
                });
#pragma warning restore 612, 618
        }
    }
}
